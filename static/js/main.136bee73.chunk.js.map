{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PersonInfo/PersonInfo.tsx","components/TablePeople/TablePeople.tsx","Pages/TablePage.tsx","Pages/PageNavLink.tsx","Pages/HomePage.tsx","App.tsx","index.tsx"],"names":["API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PersonLink","person","classNames","sex","to","slug","name","PersonInfo","selectedSlug","born","died","motherName","fatherName","mother","father","TablePeople","peopleList","useParams","personSlug","length","map","TablePage","isLoading","filteredPeopleList","isError","PageNavLink","text","isActive","HomePage","App","useState","setPeopleList","setIsError","setIsloading","useEffect","catch","motherLink","find","fatherLink","role","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"2QAGMA,EAAU,oEAMT,SAASC,IACd,OALYC,EAKA,IAJL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAKvBI,MAAK,kBAAMC,MAAMP,EAAZ,IACLM,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IAPlB,IAAcP,CAQb,C,iBCXYQ,EAAS,kBACpB,qBAAKC,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,E,iBCETC,EAAkC,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OAC7C,cAAC,IAAD,CACEF,UAAWG,IAAW,CAAE,kBAAkC,MAAfD,EAAOE,MAClDC,GAAE,kBAAaH,EAAOI,MAFxB,SAIGJ,EAAOK,MALmC,ECAlCC,EAAkC,SAAC,GAEzC,IADLN,EACI,EADJA,OACI,IADIO,oBACJ,MADmB,GACnB,EAEFL,EACEF,EADFE,IAAKM,EACHR,EADGQ,KAAMC,EACTT,EADSS,KAAMC,EACfV,EADeU,WAAYC,EAC3BX,EAD2BW,WAAYC,EACvCZ,EADuCY,OAAQR,EAC/CJ,EAD+CI,KAAMS,EACrDb,EADqDa,OAGzD,OACE,qBACE,UAAQ,SAERf,UAAWG,IAAW,CAAE,yBAA0BM,IAAiBH,IAHrE,UAKE,6BACE,cAAC,EAAD,CAAYJ,OAAQA,MAGtB,6BAAKE,IACL,6BAAKM,IACL,6BAAKC,IACJG,EAEG,6BACE,cAAC,EAAD,CAAYZ,OAAQY,MAItB,6BACGF,GAAc,MAGpBG,EAEG,6BACE,cAAC,EAAD,CAAYb,OAAQa,MAItB,6BACGF,GAAc,QAK1B,ECxCYG,EAA+B,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAC7C,EAA4BC,cAApBC,kBAAR,MAAqB,GAArB,EAEA,OACE,wBACE,UAAQ,cACRnB,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAGJ,gCACGiB,EAAWG,OACRH,EAAWI,KAAI,SAAAnB,GACf,OACE,cAAC,EAAD,CACEA,OAAQA,EACRO,aAAcU,GACTjB,EAAOI,KAGjB,IAEC,mBAAG,UAAQ,kBAAX,mDAOX,ECnCYgB,EAA6B,SAAC,GAAD,IACxCC,EADwC,EACxCA,UAAWC,EAD6B,EAC7BA,mBAAoBC,EADS,EACTA,QADS,OAGxC,mCACE,sBAAKzB,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,yBAEA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UACGyB,GACC,mBACE,UAAQ,qBACRzB,UAAU,kBAFZ,kCAODuB,EACG,cAAC,EAAD,IACA,cAAC,EAAD,CAAaN,WAAYO,aAnBG,ECF7BE,EAAyB,SAAC,GAAD,IAAGrB,EAAH,EAAGA,GAAIsB,EAAP,EAAOA,KAAP,OACpC,cAAC,IAAD,CACEtB,GAAIA,EACJL,UAAW,gBAAG4B,EAAH,EAAGA,SAAH,OAAkBzB,IAAW,cACtC,CAAE,8BAA+ByB,GADxB,EAFb,SAKGD,GANiC,ECRzBE,EAAqB,kBAChC,qBAAK7B,UAAU,YAAf,SACE,oBAAIA,UAAU,QAAd,wBAF8B,ECWrB8B,EAAgB,WAC3B,MAAoCC,mBAAmB,IAAvD,mBAAOd,EAAP,KAAmBe,EAAnB,KACA,EAA8BD,oBAAS,GAAvC,mBAAON,EAAP,KAAgBQ,EAAhB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOR,EAAP,KAAkBW,EAAlB,KAEAC,qBAAU,WACRF,GAAW,GAEX3C,IACGK,KAAKqC,GACLrC,MAAK,kBAAMuC,GAAa,EAAnB,IACLE,OAAM,kBAAMH,GAAW,EAAjB,GACV,GAAE,IAEH,IAAMT,EAAqB,YAAIP,GAAYI,KAAI,SAAAnB,GAC7C,IAAMmC,EAAapB,EAChBqB,MAAK,SAAAxB,GAAM,OAAIA,EAAOP,OAASL,EAAOU,UAA3B,IACR2B,EAAatB,EAChBqB,MAAK,SAAAvB,GAAM,OAAIA,EAAOR,OAASL,EAAOW,UAA3B,IAEd,OAAO,2BAAKX,GAAZ,IAAoBY,OAAQuB,EAAYtB,OAAQwB,GACjD,IAED,OACE,sBAAK,UAAQ,MAAb,UACE,qBACE,UAAQ,MACRvC,UAAU,iCACVwC,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKxC,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAaK,GAAG,IAAIsB,KAAK,SACzB,cAAC,EAAD,CAAatB,GAAG,UAAUsB,KAAK,kBAKrC,sBAAM3B,UAAU,UAAhB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEyC,KAAK,IACLC,QAAS,cAAC,EAAD,MAEX,cAAC,IAAD,CACED,KAAK,QACLC,QAAS,cAAC,IAAD,CAAUrC,GAAG,IAAIsC,SAAO,MAGnC,eAAC,IAAD,CAAOF,KAAK,SAAZ,UACE,cAAC,IAAD,CACEG,OAAK,EACLF,QACE,cAAC,EAAD,CACEnB,UAAWA,EACXE,QAASA,EACTD,mBAAoBA,MAI1B,cAAC,IAAD,CACEiB,KAAK,cACLC,QACE,cAAC,EAAD,CACEnB,UAAWA,EACXE,QAASA,EACTD,mBAAoBA,SAM5B,cAAC,IAAD,CACEiB,KAAK,IACLC,QAAS,oBAAI1C,UAAU,QAAd,qCAMpB,ECpFD6C,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.136bee73.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { LinkProps } from './Link';\n\nexport const PersonLink: React.FC<LinkProps> = ({ person }) => (\n  <Link\n    className={classNames({ 'has-text-danger': person.sex === 'f' })}\n    to={`/people/${person.slug}`}\n  >\n    {person.name}\n  </Link>\n);\n","import classNames from 'classnames';\nimport { PersonLink } from '../PersonLink/PersonLink';\nimport { PropsInfo } from '../TablePeople/PropsInfo';\n\nexport const PersonInfo: React.FC<PropsInfo> = ({\n  person, selectedSlug = '',\n}) => {\n  const {\n    sex, born, died, motherName, fatherName, mother, slug, father,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      // eslint-disable-next-line max-len\n      className={classNames({ 'has-background-warning': selectedSlug === slug })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      {mother\n        ? (\n          <td>\n            <PersonLink person={mother} />\n          </td>\n        )\n        : (\n          <td>\n            {motherName || '-'}\n          </td>\n        )}\n      {father\n        ? (\n          <td>\n            <PersonLink person={father} />\n          </td>\n        )\n        : (\n          <td>\n            {fatherName || '-'}\n          </td>\n        )}\n    </tr>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonInfo } from '../PersonInfo/PersonInfo';\n\nexport type Props = {\n  peopleList: Person[];\n};\n\nexport const TablePeople: React.FC<Props> = ({ peopleList }) => {\n  const { personSlug = '' } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n      <tbody>\n        {peopleList.length\n          ? peopleList.map(person => {\n            return (\n              <PersonInfo\n                person={person}\n                selectedSlug={personSlug}\n                key={person.slug}\n              />\n            );\n          })\n          : (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n      </tbody>\n    </table>\n  );\n};\n","import { Loader } from '../components/Loader';\nimport { TablePeople } from '../components/TablePeople/TablePeople';\nimport { Person } from '../types';\n\ntype Props = {\n  isLoading: boolean;\n  isError: boolean;\n  filteredPeopleList: Person[];\n};\n\nexport const TablePage: React.FC<Props> = ({\n  isLoading, filteredPeopleList, isError,\n}) => (\n  <>\n    <div className=\"container\">\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isError && (\n            <p\n              data-cy=\"peopleLoadingError\"\n              className=\"has-text-danger\"\n            >\n              Something went wrong\n            </p>\n          )}\n          {isLoading\n            ? <Loader />\n            : <TablePeople peopleList={filteredPeopleList} />}\n        </div>\n      </div>\n    </div>\n  </>\n);\n","import { NavLink } from 'react-router-dom';\nimport { FC } from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  to: string;\n  text: string;\n};\nexport const PageNavLink: FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames('navbar-item',\n      { 'has-background-grey-lighter': isActive })}\n  >\n    {text}\n  </NavLink>\n);\n","export const HomePage: React.FC = () => (\n  <div className=\"container\">\n    <h1 className=\"title\">Home Page</h1>\n  </div>\n);\n","import './App.scss';\nimport {\n  Navigate, Route, Routes,\n} from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getPeople } from './api';\nimport { Person } from './types/Person';\nimport { TablePage } from './Pages/TablePage';\nimport { PageNavLink } from './Pages/PageNavLink';\nimport { HomePage } from './Pages/HomePage';\n\nexport const App: React.FC = () => {\n  const [peopleList, setPeopleList] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsloading] = useState(true);\n\n  useEffect(() => {\n    setIsError(false);\n\n    getPeople()\n      .then(setPeopleList)\n      .then(() => setIsloading(false))\n      .catch(() => setIsError(true));\n  }, []);\n\n  const filteredPeopleList = [...peopleList].map(person => {\n    const motherLink = peopleList\n      .find(mother => mother.name === person.motherName);\n    const fatherLink = peopleList\n      .find(father => father.name === person.fatherName);\n\n    return { ...person, mother: motherLink, father: fatherLink };\n  });\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <PageNavLink to=\"/\" text=\"Home\" />\n            <PageNavLink to=\"/people\" text=\"People\" />\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={<HomePage />}\n          />\n          <Route\n            path=\"/home\"\n            element={<Navigate to=\"/\" replace />}\n          />\n\n          <Route path=\"people\">\n            <Route\n              index\n              element={(\n                <TablePage\n                  isLoading={isLoading}\n                  isError={isError}\n                  filteredPeopleList={filteredPeopleList}\n                />\n              )}\n            />\n            <Route\n              path=\":personSlug\"\n              element={(\n                <TablePage\n                  isLoading={isLoading}\n                  isError={isError}\n                  filteredPeopleList={filteredPeopleList}\n                />\n              )}\n            />\n          </Route>\n\n          <Route\n            path=\"*\"\n            element={<h1 className=\"title\">Page not found</h1>}\n          />\n        </Routes>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}