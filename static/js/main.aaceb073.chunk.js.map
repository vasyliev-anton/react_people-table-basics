{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PersonInfo/PersonInfo.tsx","components/TablePeople/TablePeople.tsx","Pages/TablePage.tsx","Pages/HomePage.tsx","Pages/PageNavLink.tsx","components/NavBar/NavBar.tsx","Pages/NotFoundPage .tsx","App.tsx","index.tsx"],"names":["API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PersonLink","person","classNames","sex","to","slug","name","PersonInfo","selectedSlug","born","died","motherName","fatherName","mother","father","TablePeople","list","useParams","personSlug","length","map","TablePage","isLoading","isError","HomePage","PageNavLink","text","isActive","NavBar","role","NotFoundPage","App","useState","peopleList","setPeopleList","setIsError","setIsloading","getPeopleList","result","useEffect","peopleListWithParentsLinks","useMemo","motherLink","find","fatherLink","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.aaceb073.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { LinkProps } from './LinkProps';\n\nexport const PersonLink: React.FC<LinkProps> = ({ person }) => (\n  <Link\n    className={classNames({ 'has-text-danger': person.sex === 'f' })}\n    to={`/people/${person.slug}`}\n  >\n    {person.name}\n  </Link>\n);\n","import classNames from 'classnames';\nimport { PersonLink } from '../PersonLink/PersonLink';\nimport { PropsInfo } from './PropsInfo';\n\nexport const PersonInfo: React.FC<PropsInfo> = ({\n  person, selectedSlug = '',\n}) => {\n  const {\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n    mother,\n    slug,\n    father,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': selectedSlug === slug,\n      })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      {mother ? (\n        <td>\n          <PersonLink person={mother} />\n        </td>\n      ) : (\n        <td>\n          {motherName || '-'}\n        </td>\n      )}\n      {father ? (\n        <td>\n          <PersonLink person={father} />\n        </td>\n      ) : (\n        <td>\n          {fatherName || '-'}\n        </td>\n      )}\n    </tr>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { PersonInfo } from '../PersonInfo/PersonInfo';\nimport { PropsTablePage } from './PropsTablePage';\n\nexport const TablePeople: React.FC<PropsTablePage> = ({ list }) => {\n  const { personSlug = '' } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n      <tbody>\n        {list.length ? list.map(person => (\n          <PersonInfo\n            person={person}\n            selectedSlug={personSlug}\n            key={person.slug}\n          />\n        )) : (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        )}\n      </tbody>\n    </table>\n  );\n};\n","import { Loader } from '../components/Loader';\nimport { TablePeople } from '../components/TablePeople/TablePeople';\nimport { Person } from '../types';\n\ntype Props = {\n  isLoading: boolean;\n  isError: boolean;\n  list: Person[];\n};\n\nexport const TablePage: React.FC<Props> = ({ isLoading, list, isError }) => (\n  <>\n    <div className=\"container\">\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isError && (\n            <p\n              data-cy=\"peopleLoadingError\"\n              className=\"has-text-danger\"\n            >\n              Something went wrong\n            </p>\n          )}\n          {isLoading\n            ? <Loader />\n            : <TablePeople list={list} />}\n        </div>\n      </div>\n    </div>\n  </>\n);\n","export const HomePage: React.FC = () => (\n  <div className=\"container\">\n    <h1 className=\"title\">Home Page</h1>\n  </div>\n);\n","import { NavLink } from 'react-router-dom';\nimport { FC } from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  to: string;\n  text: string;\n};\nexport const PageNavLink: FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames('navbar-item',\n      { 'has-background-grey-lighter': isActive })}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from '../../Pages/PageNavLink';\n\nexport const NavBar: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"/people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","export const NotFoundPage: React.FC = () => (\n  <div className=\"container\">\n    <h1 className=\"title\">Page not found</h1>\n  </div>\n);\n","import './App.scss';\nimport {\n  Navigate, Route, Routes,\n} from 'react-router-dom';\nimport { useEffect, useMemo, useState } from 'react';\nimport { getPeople } from './api';\nimport { Person } from './types/Person';\nimport { TablePage } from './Pages/TablePage';\nimport { HomePage } from './Pages/HomePage';\nimport { NavBar } from './components/NavBar/NavBar';\nimport { NotFoundPage } from './Pages/NotFoundPage ';\n\nexport const App: React.FC = () => {\n  const [peopleList, setPeopleList] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsloading] = useState(true);\n\n  const getPeopleList = async () => {\n    try {\n      const result = await getPeople();\n\n      setPeopleList(result);\n      setIsloading(false);\n    } catch {\n      setIsloading(true);\n      setIsError(true);\n    }\n  };\n\n  useEffect(() => {\n    getPeopleList();\n  }, []);\n\n  const peopleListWithParentsLinks = useMemo(() => {\n    const result = [...peopleList].map(person => {\n      const motherLink = peopleList\n        .find(mother => mother.name === person.motherName);\n      const fatherLink = peopleList\n        .find(father => father.name === person.fatherName);\n\n      return { ...person, mother: motherLink, father: fatherLink };\n    });\n\n    return result;\n  }, [peopleList]);\n\n  return (\n    <div data-cy=\"app\">\n      <NavBar />\n      <main className=\"section\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={<HomePage />}\n          />\n          <Route\n            path=\"/home\"\n            element={<Navigate to=\"/\" replace />}\n          />\n\n          <Route path=\"people\">\n            <Route\n              index\n              element={(\n                <TablePage\n                  isLoading={isLoading}\n                  isError={isError}\n                  list={peopleListWithParentsLinks}\n                />\n              )}\n            />\n            <Route\n              path=\":personSlug\"\n              element={(\n                <TablePage\n                  isLoading={isLoading}\n                  isError={isError}\n                  list={peopleListWithParentsLinks}\n                />\n              )}\n            />\n          </Route>\n\n          <Route\n            path=\"*\"\n            element={<NotFoundPage />}\n          />\n        </Routes>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}